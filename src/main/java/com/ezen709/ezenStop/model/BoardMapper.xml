<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezen709.ezenStop.model">
 	<select id="reviewList" parameterType="java.util.Map" resultType="ReviewBoardDTO">
		select * 
		from (
			select rownum rn, A.* 
		 	from (
		 		select * 
		 		from ezen_review_board 
				where visible = 1
		 		order by article_num desc)A
		 	) 
		where rn between #{start} and #{end}
 	</select>
	<select id="reviewGetCount" resultType="Integer">
		select count(*)
		from ezen_review_board
		where visible = 1
	</select>
	<update id="plusReadCount" parameterType="Integer">
 		update ezen_review_board 
 		set readcount = readcount + 1 
 		where article_num = #{article_num}
 	</update>
 	<update id="updateReplyCount" parameterType="java.util.Map">
 		update ezen_review_board 
 		set replycount = #{replyCount} 
 		where article_num = #{article_num}
 	</update>
	<insert id="reviewInsert" parameterType="ReviewBoardDTO">
 		insert into ezen_review_board 
 		values (ezen_board_seq.nextval, #{category}, #{subject}, #{id}, #{content}, 
 		to_char(sysdate,'yyyy-mm-dd'), to_char(sysdate,'hh24:mi'), 0, 0, 0, 0, 'review_detail.board', 1, #{image}, #{filesize})
 	</insert>
 	<select id="reviewDetail" parameterType="Integer" resultType="ReviewBoardDTO">
 		select * 
 		from ezen_review_board
 		where article_num = #{article_num}
 	</select>
 	<delete id="reviewDelete" parameterType="Integer">
 		delete
 		from ezen_review_board
 		where article_num = #{article_num}
 	</delete>
 	<delete id="reviewfileDelete" parameterType="Integer">
 		delete image
 		from ezen_review_board
 		where article_num = #{article_num}
 	</delete>
 	<select id="checkUserUpDown" parameterType="BoardUpDownDTO" resultType="Integer">
 		select count(*) from board_updown where ((article_num = #{article_num}) and (userId = #{userId}))
 	</select>
 	<insert id="upBoard" parameterType="BoardUpDownDTO">
 		insert into board_updown values (#{article_num}, #{userId}, #{behavior})
 	</insert>
 	<update id="upCountBoard" parameterType="Integer">
 		update ezen_review_Board
 		set upcount = upcount + 1
 		where article_num = #{article_num}
 	</update>
 	<update id="downCountBoard" parameterType="Integer">
 		update ezen_review_Board
 		set downcount = downcount + 1
 		where article_num = #{article_num}
 	</update>
 	<insert id="reportBoard" parameterType="BoardUpDownDTO">
 		insert into board_updown values (#{article_num}, #{userId}, 2)
 	</insert>
 	<select id="checkUserReport" parameterType="BoardUpDownDTO" resultType="Integer">
 		select count(*) from board_updown where ((article_num = #{article_num}) and (userId = #{userId}) and (behavior = 2))
 	</select>
 	<insert id="insertReportContent" parameterType="BoardReportDTO">
 		insert into board_report values (#{article_num}, #{userId}, #{reportContent}, sysdate)
 	</insert>
 	<select id="checkReportCount" parameterType = "Integer" resultType="Integer">
 		select count(*) from board_updown where ((article_num = #{article_num}) and (behavior = 2))
 	</select>
 	<update id="setUnvisible" parameterType="Integer">
 		update ezen_review_Board
 		set visible = 0
 		where article_num = #{article_num}
 	</update>
 	<select id="reportGetCount" resultType="Integer">
		select count(*)
		from board_report
	</select>
	<select id="getReportList" parameterType="java.util.Map" resultType="BoardReportDTO">
		select * 
		from (
			select rownum rn, A.* 
		 	from (
		 		select * 
		 		from board_report
		 		order by article_num desc)A
		 	) 
		where rn between #{start} and #{end}
 	</select>
 	<select id="getTableHasLocation" resultType="String">
 		select TABLE_NAME from user_tab_columns where column_name = 'DETAILLOCATION'
 	</select>
 	<select id="getLocation" parameterType="java.util.Map" resultType="String">
 		select detaillocation from ${tableName} where article_num = to_number(#{article_num})
 	</select>
</mapper>