<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezen709.ezenStop.model">
 	<select id="reviewList" parameterType="java.util.Map" resultType="ReviewBoardDTO">
		<!-- select * 
		from (
			select rownum rn, A.* 
		 	from (
		 		select * 
		 		from ezen_review_board 
				where visible = 1
		 		order by article_num desc)A
		 	) 
		where rn between #{start} and #{end}-->
		select *
		from(
				select rownum rn, A.*
				from(
						select ezen_review_board.* , ezen_member.grade, ezen_member.academylocation
						from ezen_review_board, ezen_member
						where ((ezen_review_board.id = ezen_member.id) and (ezen_review_board.visible = 1))
						order by ezen_review_board.article_num desc)A
					)
		where rn between #{start} and #{end}
 	</select>
 	<resultMap type="ReviewBoardDTO" id="ReviewBoardDTO">
 		<result column="EZEN_REVIEW_BOARD.*" property="*"/>
 		<collection property="grade" resultMap="Ezen_memberDTO"></collection>
 	</resultMap>
	<select id="reviewGetCount" resultType="Integer">
		select count(*)
		from ezen_review_board
		where visible = 1
	</select>
	<select id="searchReview" parameterType="java.util.Map" resultType="ReviewBoardDTO">
  		select * 
  		from (
			select rownum rn, A.* 
			from (
		 		select ezen_review_board.* , ezen_member.grade, ezen_member.academylocation
		 		from ezen_review_board, ezen_member 
		 		where ((ezen_review_board.id = ezen_member.id) and (ezen_review_board.${searchtype} like #{searchstring}) and (visible = 1))
		 		order by ezen_review_board.article_num desc)A
		 	)
		 where rn between #{start} and #{end}
	</select>
	<select id="searchReviewGetCount" parameterType="java.util.Map" resultType="Integer">
	 	select count(*)	
	 	from ezen_review_board 
	 	where ${searchtype} like #{searchstring} and visible = 1
	</select>
	<update id="plusReadCount" parameterType="Integer">
 		update ezen_review_board 
 		set readcount = readcount + 1 
 		where article_num = #{article_num}
 	</update>
 	<update id="updateReplyCount" parameterType="java.util.Map">
 		update ezen_review_board 
 		set replycount = #{replyCount} 
 		where article_num = #{article_num}
 	</update>
	<insert id="reviewInsert" parameterType="ReviewBoardDTO">
 		insert into ezen_review_board 
 		values (ezen_board_seq.nextval, #{category}, #{subject}, #{id}, #{content}, 
 		to_char(sysdate,'yyyy-mm-dd'), to_char(sysdate,'hh24:mi'), 0, 0, 0, 0, 'review_detail.board', 1, #{image}, #{filesize})
 	</insert>
 	<select id="reviewDetail" parameterType="Integer" resultType="ReviewBoardDTO">
 		select ezen_review_board.*, ezen_member.grade , ezen_member.academylocation
 		from ezen_review_board , ezen_member
 		where ((ezen_review_board.id = ezen_member.id) and (article_num = #{article_num}))
 	</select>
 	<delete id="reviewDelete" parameterType="Integer">
 		delete
 		from ezen_review_board
 		where article_num = #{article_num}
 	</delete>
 	<update id="reviewfileDelete" parameterType="Integer">
 		update ezen_review_Board
 		set image = '파일없음', filesize = 0
 		where article_num = #{article_num}
 	</update>
 	<update id="reviewEdit" parameterType="ReviewBoardDTO">
 		update ezen_review_Board
 		set category = #{category}, subject = #{subject}, content = #{content}, image = #{image}, filesize = #{filesize}
 		where article_num = #{article_num}
 	</update>
 	<select id="checkUserUpDown" parameterType="BoardUpDownDTO" resultType="Integer">
 		select count(*) from board_updown where ((article_num = #{article_num}) and (userId = #{userId}))
 	</select>
 	<insert id="insertBehaviorBoard" parameterType="BoardUpDownDTO">
 		insert into board_updown values (#{article_num}, #{userId}, #{behavior})
 	</insert>
 	<update id="upCountBoard" parameterType="java.util.Map">
 		update ${table}
 		set upcount = upcount + 1
 		where article_num = #{article_num}
 	</update>
 	<update id="downCountBoard" parameterType="java.util.Map">
 		update ${table}
 		set downcount = downcount + 1
 		where article_num = #{article_num}
 	</update>
 	<insert id="reportBoard" parameterType="BoardUpDownDTO">
 		insert into board_updown values (#{article_num}, #{userId}, 2)
 	</insert>
 	<select id="checkUserReport" parameterType="BoardUpDownDTO" resultType="Integer">
 		select count(*) from board_updown where ((article_num = #{article_num}) and (userId = #{userId}) and (behavior = 2))
 	</select>
 	<insert id="insertReportContent" parameterType="BoardReportDTO">
 		insert into board_report values (#{article_num}, #{userId}, #{reportContent}, sysdate)
 	</insert>
 	<select id="checkReportCount" parameterType = "Integer" resultType="Integer">
 		select count(*) from board_updown where ((article_num = #{article_num}) and (behavior = 2))
 	</select>
 	<update id="setUnvisible" parameterType="java.util.Map">
 		update ${table}
 		set visible = -1
 		where article_num = #{article_num}
 	</update>
 	<select id="reportGetCount" resultType="Integer">
		select count(*)
		from board_report
	</select>
	<select id="getReportList" parameterType="java.util.Map" resultType="BoardReportDTO">
		select * 
		from (
			select rownum rn, A.* 
		 	from (
		 		select board_report.*, ezen_review_board.visible , ezen_member.academylocation, ezen_member.grade
		 		from board_report, ezen_review_board, ezen_member
		 		where board_report.article_num = ezen_review_board.article_num and board_report.userid = ezen_member.id
		 		order by board_report.article_num desc)A
		 	) 
		where rn between #{start} and #{end}
 	</select>
 	<select id="getTableHasLocation" resultType="String">
 		select TABLE_NAME from user_tab_columns where column_name = 'DETAILLOCATION'
 	</select>
 	<select id="getLocation" parameterType="java.util.Map" resultType="String">
 		select detaillocation from ${tableName} where article_num = to_number(#{article_num})
 	</select>
 	<update id="changeVisibleStatus" parameterType="Integer">
 		update ezen_review_board
 		set visible = (visible * -1)
 		where article_num = #{article_num}
 	</update>
 	<select id="SearchReportList" parameterType="java.util.Map" resultType="BoardReportDTO">
 		select * 
		from (
			select rownum rn, A.* 
		 	from (
		 		select board_report.*, ezen_review_board.visible , ezen_member.academylocation, ezen_member.grade
		 		from board_report, ezen_review_board, ezen_member
		 		where ((board_report.article_num = ezen_review_board.article_num) and (board_report.${searchType} like #{searchString})) and board_report.userid = ezen_member.id
		 		order by board_report.article_num desc)A
		 	) 
		where rn between #{start} and #{end}
 	</select>
 	<select id="selectUnvisibleBoard" parameterType="java.util.Map" resultType="ReviewBoardDTO">
 		select * from ${tableName} where visible = '-1' 
 	</select>
 	<select id="searchUnvisibleBoard" parameterType="java.util.Map" resultType="ReviewBoardDTO">
 		select * from ${tableName} where visible = '-1' and ${searchType} like #{searchString}
 	</select>
 	<select id="getHotBoard" parameterType="java.util.Map" resultType="ReviewBoardDTO">
 		<!-- select * from ${tableName} 
 		where visible = 1 and <![CDATA[rownum <= 3]]> and 
 		(regdate between to_char(sysdate-7,'yyyy-mm-dd') and to_char(sysdate,'yyyy-mm-dd'))
 		order by upcount desc-->
 		select *
 			from (
 				select rownum rn, A.*
 				from(
 					select * from ${tableName}
 					where visible = 1 and 
 					(regdate between to_char(sysdate-7,'yyyy-mm-dd') and to_char(sysdate,'yyyy-mm-dd'))
 					order by upcount desc)A
 					)
 				where <![CDATA[rn <= 3]]>
 	</select>
 	<select id="getReviewIndex" resultType="ReviewBoardDTO" parameterType="java.util.Map">
 		select * from ${tableName}
 		where visible = 1 and <![CDATA[rownum <= 6]]>
 		order by article_num desc
 	</select>
 	<select id="campusBoardCount" resultType="Integer">
 		select count(*)
 		from ezen_campus_board
 		where visible = 1 and category = #{where}
 	</select>
 	<select id="getCampusBoard" resultType="ReviewBoardDTO">
 	select * 
		from (
			select rownum rn, A.* 
		 	from (
		 		select ezen_campus_board.*, anonymous_board.randomid
		 		from  ezen_campus_board, anonymous_board
		 		where ezen_campus_board.article_num = anonymous_board.article_num and ezen_campus_board.category = #{where}
		 		and ezen_campus_board.id = anonymous_board.id
		 		order by ezen_campus_board.article_num desc)A
		 	) 
		where rn between #{start} and #{end}
 	</select>
 	<select id="getCertifiedCampus" resultType="ezen_memberDTO">
		 select * from ezen_member where id=#{id}
 	</select>
 	<insert id="campusInsert">
 		insert into ezen_campus_board 
 		values (ezen_board_seq.nextval, #{category}, #{subject}, #{id}, #{content}, 
 		to_char(sysdate,'yyyy-mm-dd'), to_char(sysdate,'hh24:mi'), 0, 0, 0, 0, 'campus_detail.board', 1, #{image}, #{filesize})
 	</insert>
 	<select id="getArticle_num" resultType="ReviewBoardDTO">
 		select article_num from ezen_campus_board where id = #{id} order by article_num desc
 	</select>
 	<insert id="campusInsertRandomId" parameterType="java.util.Map">
 		insert into anonymous_board
 		values (#{article_num}, #{id}, #{randomId})
 	</insert>
 	<select id="checkAnonymousInsert" parameterType="java.util.Map" resultType="Integer">
 		select count(*) from anonymous_board where article_num = #{article_num} and id = #{id}
 	</select>
</mapper>